name: Deploy

on:
  workflow_run:
    workflows: ["Release"]
    branches:
      - master
      - beta
    types:
      - completed

env:
  NODE: 16.x

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.workflow_run.head_branch }}
    # setup/action.yml composite
    - name: Node setup
      uses: actions/setup-node@v1
      with:
        node-version: "${{ env.NODE }}"
    - name: Yarn Cache Path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Yarn Cache
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
          ~/.npm
          ~/.cache/Cypress
        key: ${{ runner.os }}-node${{ env.NODE }}-yarn-1-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node${{ env.NODE }}-yarn-1-
    - name: Yarn
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --prefer-offline
    # build/action.yml composite
    - name: Generate demos
      run: yarn generate
    - name: Check files changes
      run: echo "Use 'yarn generate' and commit if files changed:" && git diff --name-only --exit-code && echo "No files changed during lint."
    - name: Build
      run: yarn build
      env:
        CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
    # deploy/action.yml composite
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.semantic_release_github_token }}
        BRANCH: gh-pages
        FOLDER: public
        GIT_CONFIG_NAME: minimit
        GIT_CONFIG_EMAIL: beaver82@gmail.com
